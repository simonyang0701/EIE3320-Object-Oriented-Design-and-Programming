#BlueJ class context
comment0.target=Canvas
comment0.text=\n\ Class\ Canvas\ -\ a\ class\ to\ allow\ for\ simple\ graphical\ \n\ drawing\ on\ a\ canvas.\n\ \n\ @author\:\ Bruce\ Quig\n\ @author\:\ Michael\ Kolling\ (mik)\n\n\ @version\:\ 1.6\n\ date\:\ \ \ \ \ 24.05.2001\n\n\ changes\:\n\ \ \ 19.11.1999\ \ \ mik\ \ \ \ \ added\ proper\ buffering\ and\ screen\ update\n\ \ \ 10.08.2000\ \ \ mik\ \ \ \ \ modified\ "setVisible"\ to\ bring\ window\ to\ front\n\ \ \ 06.10.2000\ \ \ mik\ \ \ \ \ fixed\ a\ bug\ in\ "setSize"\n\ \ \ 24.05.2001\ \ \ mik\ \ \ \ \ added\ "erase"\ method\n
comment1.params=title
comment1.target=Canvas(java.lang.String)
comment1.text=\n\ Create\ a\ Canvas\ with\ default\ height,\ width\ and\ background\ colour\ \n\ (300,\ 300,\ white).\n\ @param\ title\ \ title\ to\ appear\ in\ Canvas\ Frame\ \ \ \ \ \n
comment10.params=shape
comment10.target=void\ eraseOutline(java.awt.Shape)
comment10.text=\n\ Erases\ a\ given\ shape's\ outline\ on\ the\ screen.\n\ @param\ \ shape\ \ the\ shape\ object\ to\ be\ erased\ \n
comment11.params=image\ x\ y
comment11.target=boolean\ drawImage(java.awt.Image,\ int,\ int)
comment11.text=\n\ Draws\ an\ image\ onto\ the\ canvas.\n\ @param\ \ image\ \ \ the\ Image\ object\ to\ be\ displayed\ \n\ @param\ \ x\ \ \ \ \ \ \ x\ co-ordinate\ for\ Image\ placement\ \n\ @param\ \ y\ \ \ \ \ \ \ y\ co-ordinate\ for\ Image\ placement\ \n\ @return\ \ returns\ boolean\ value\ representing\ whether\ the\ image\ was\ \n\ \ \ \ \ \ \ \ \ \ completely\ loaded\ \n
comment12.params=text\ x\ y
comment12.target=void\ drawString(java.lang.String,\ int,\ int)
comment12.text=\n\ Draws\ a\ String\ on\ the\ Canvas.\n\ @param\ \ text\ \ \ the\ String\ to\ be\ displayed\ \n\ @param\ \ x\ \ \ \ \ \ x\ co-ordinate\ for\ text\ placement\ \n\ @param\ \ y\ \ \ \ \ \ y\ co-ordinate\ for\ text\ placement\n
comment13.params=text\ x\ y
comment13.target=void\ eraseString(java.lang.String,\ int,\ int)
comment13.text=\n\ Erases\ a\ String\ on\ the\ Canvas.\n\ @param\ \ text\ \ \ \ \ the\ String\ to\ be\ displayed\ \n\ @param\ \ x\ \ \ \ \ \ \ \ x\ co-ordinate\ for\ text\ placement\ \n\ @param\ \ y\ \ \ \ \ \ \ \ y\ co-ordinate\ for\ text\ placement\n
comment14.params=x1\ y1\ x2\ y2
comment14.target=void\ drawLine(int,\ int,\ int,\ int)
comment14.text=\n\ Draws\ a\ line\ on\ the\ Canvas.\n\ @param\ \ x1\ \ \ x\ co-ordinate\ of\ start\ of\ line\ \n\ @param\ \ y1\ \ \ y\ co-ordinate\ of\ start\ of\ line\ \n\ @param\ \ x2\ \ \ x\ co-ordinate\ of\ end\ of\ line\ \n\ @param\ \ y2\ \ \ y\ co-ordinate\ of\ end\ of\ line\ \n
comment15.params=newColour
comment15.target=void\ setForegroundColour(java.awt.Color)
comment15.text=\n\ Sets\ the\ foreground\ colour\ of\ the\ Canvas.\n\ @param\ \ newColour\ \ \ the\ new\ colour\ for\ the\ foreground\ of\ the\ Canvas\ \n
comment16.params=
comment16.target=java.awt.Color\ getForegroundColour()
comment16.text=\n\ Returns\ the\ current\ colour\ of\ the\ foreground.\n\ @return\ \ \ the\ colour\ of\ the\ foreground\ of\ the\ Canvas\ \n
comment17.params=newColour
comment17.target=void\ setBackgroundColour(java.awt.Color)
comment17.text=\n\ Sets\ the\ background\ colour\ of\ the\ Canvas.\n\ @param\ \ newColour\ \ \ the\ new\ colour\ for\ the\ background\ of\ the\ Canvas\ \n
comment18.params=
comment18.target=java.awt.Color\ getBackgroundColour()
comment18.text=\n\ Returns\ the\ current\ colour\ of\ the\ background\n\ @return\ \ \ the\ colour\ of\ the\ background\ of\ the\ Canvas\ \n
comment19.params=newFont
comment19.target=void\ setFont(java.awt.Font)
comment19.text=\n\ changes\ the\ current\ Font\ used\ on\ the\ Canvas\n\ @param\ \ newFont\ \ \ new\ font\ to\ be\ used\ for\ String\ output\n
comment2.params=title\ width\ height
comment2.target=Canvas(java.lang.String,\ int,\ int)
comment2.text=\n\ Create\ a\ Canvas\ with\ default\ background\ colour\ (white).\n\ @param\ title\ \ title\ to\ appear\ in\ Canvas\ Frame\n\ @param\ width\ \ the\ desired\ width\ for\ the\ canvas\n\ @param\ height\ \ the\ desired\ height\ for\ the\ canvas\n
comment20.params=
comment20.target=java.awt.Font\ getFont()
comment20.text=\n\ Returns\ the\ current\ font\ of\ the\ canvas.\n\ @return\ \ \ \ \ the\ font\ currently\ in\ use\n
comment21.params=width\ height
comment21.target=void\ setSize(int,\ int)
comment21.text=\n\ Sets\ the\ size\ of\ the\ canvas.\n\ @param\ \ width\ \ \ \ new\ width\ \n\ @param\ \ height\ \ \ new\ height\ \n
comment22.params=
comment22.target=java.awt.Dimension\ getSize()
comment22.text=\n\ Returns\ the\ size\ of\ the\ canvas.\n\ @return\ \ \ \ \ The\ current\ dimension\ of\ the\ canvas\n
comment23.params=milliseconds
comment23.target=void\ wait(int)
comment23.text=\n\ Waits\ for\ a\ specified\ number\ of\ milliseconds\ before\ finishing.\n\ This\ provides\ an\ easy\ way\ to\ specify\ a\ small\ delay\ which\ can\ be\n\ used\ when\ producing\ animations.\n\ @param\ \ milliseconds\ \ the\ number\ \n
comment3.params=title\ width\ height\ bgColour
comment3.target=Canvas(java.lang.String,\ int,\ int,\ java.awt.Color)
comment3.text=\n\ Create\ a\ Canvas.\n\ @param\ title\ \ title\ to\ appear\ in\ Canvas\ Frame\n\ @param\ width\ \ the\ desired\ width\ for\ the\ canvas\n\ @param\ height\ \ the\ desired\ height\ for\ the\ canvas\n\ @param\ bgClour\ \ the\ desired\ background\ colour\ of\ the\ canvas\n
comment4.params=visible
comment4.target=void\ setVisible(boolean)
comment4.text=\n\ Set\ the\ canvas\ visibility\ and\ brings\ canvas\ to\ the\ front\ of\ screen\n\ when\ made\ visible.\ This\ method\ can\ also\ be\ used\ to\ bring\ an\ already\n\ visible\ canvas\ to\ the\ front\ of\ other\ windows.\n\ @param\ visible\ \ boolean\ value\ representing\ the\ desired\ visibility\ of\n\ the\ canvas\ (true\ or\ false)\ \n
comment5.params=
comment5.target=boolean\ isVisible()
comment5.text=\n\ Provide\ information\ on\ visibility\ of\ the\ Canvas.\n\ @return\ \ true\ if\ canvas\ is\ visible,\ false\ otherwise\n
comment6.params=shape
comment6.target=void\ draw(java.awt.Shape)
comment6.text=\n\ Draw\ the\ outline\ of\ a\ given\ shape\ onto\ the\ canvas.\n\ @param\ \ shape\ \ the\ shape\ object\ to\ be\ drawn\ on\ the\ canvas\n
comment7.params=shape
comment7.target=void\ fill(java.awt.Shape)
comment7.text=\n\ Fill\ the\ internal\ dimensions\ of\ a\ given\ shape\ with\ the\ current\ \n\ foreground\ colour\ of\ the\ canvas.\n\ @param\ \ shape\ \ the\ shape\ object\ to\ be\ filled\ \n
comment8.params=
comment8.target=void\ erase()
comment8.text=\n\ Erase\ the\ whole\ canvas.\n
comment9.params=shape
comment9.target=void\ erase(java.awt.Shape)
comment9.text=\n\ Erase\ a\ given\ shape's\ interior\ on\ the\ screen.\n\ @param\ \ shape\ \ the\ shape\ object\ to\ be\ erased\ \n
numComments=24
